{"topicSections":[{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey"],"title":"Structures"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank"],"title":"Type Properties"}],"abstract":[{"type":"text","text":"A validator that works by traversing an "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" object and validating"},{"type":"text","text":" "},{"type":"text","text":"any values that match an included validation’s type and pass that validation’s"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"externalID":"s:10OpenAPIKit9ValidatorC","modules":[{"name":"OpenAPIKit"}],"title":"Validator","role":"symbol","symbolKind":"class"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/validator"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The default Validator will perform a set of default validations"},{"type":"text","text":" "},{"type":"text","text":"that catch OpenAPI Specification violations not possible (or inconvenient) to"},{"type":"text","text":" "},{"type":"text","text":"prevent using the Swift type-system."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}],"type":"paragraph"},{"code":["let document = OpenAPI.Document(...)","let validator = Validator()","try document.validate(using: validator)","","\/\/ or, equivalently for the default validator:","try document.validate()"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The default validations are"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Operations must contain at least one response.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Document-level tag names are unique.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Parameters are unique within each Path Item.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Parameters are unique within each Operation."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Operation Ids are unique across the whole Document.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All OpenAPI.References that refer to components in this"},{"text":" ","type":"text"},{"text":"document can be found in the components dictionary.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"If you want a Validator that won’t perform any"},{"type":"text","text":" "},{"type":"text","text":"validations except the ones you add, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"Validator.blank"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"You can add validations to the validator using the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"validating()"},{"type":"text","text":" instance methods."}],"type":"paragraph"},{"inlineContent":[{"text":"There are a few default validations that ship with OpenAPIKit but","type":"text"},{"text":" ","type":"text"},{"text":"are not used unless explicitly added to a Validator. You can find these","type":"text"},{"text":" ","type":"text"},{"text":"validations as static members of the ","type":"text"},{"code":"Validation","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}],"type":"paragraph"},{"code":["let document = OpenAPI.Document(...)","let validator = Validator()","    .validating(.documentContainsPaths)","    .validating(.pathsContainOperations)","try document.validate(using: validator)"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"At their core, all validations are values of the ","type":"text"},{"type":"codeVoice","code":"Validation"},{"text":" ","type":"text"},{"text":"type. You can create validations by initializing the ","type":"text"},{"type":"codeVoice","code":"Validation"},{"text":" ","type":"text"},{"text":"type directly but it is generally more convenient to add validations","type":"text"},{"text":" ","type":"text"},{"text":"to a Validator using one of the convenience ","type":"text"},{"type":"codeVoice","code":"validating()"},{"text":" ","type":"text"},{"text":"methods that know how to construct ","type":"text"},{"type":"codeVoice","code":"Validation"},{"text":" on your behalf.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, you can construct validation methods for simple equalities"},{"type":"text","text":" "},{"type":"text","text":"and inequalities by specifying the KeyPath from any OpenAPI type to"},{"type":"text","text":" "},{"type":"text","text":"the value you want to validate and then writing the equality\/inequality"},{"type":"text","text":" "},{"type":"text","text":"that must succeed for the validation to pass."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}],"type":"paragraph"},{"code":["let validator = Validator()","    .validating(","        \"API version is 2.0\",","        check: \\OpenAPI.Document.Info.version == \"2.0\"",")"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You can add a "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause to any validation as long as the "},{"code":"check","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause both examine the same type (i.e. "},{"code":"OpenAPI.Document.Info","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"from the previous example and "},{"code":"OpenAPI.Document","type":"codeVoice"},{"type":"text","text":" from the next example)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The next example also uses "},{"type":"codeVoice","code":"take()"},{"type":"text","text":" in its "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause. This allows you to"},{"type":"text","text":" "},{"type":"text","text":"dig into a value based on its KeyPath just like the previous example but you can"},{"type":"text","text":" "},{"type":"text","text":"use it for more complicated criteria than equality\/inequality."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Finally, the next example also introduces the context access KayPath syntax in its"},{"type":"text","text":" "},{"type":"codeVoice","code":"check"},{"type":"text","text":" clause. This syntax allows you to access the entire OpenAPI Document"},{"type":"text","text":" "},{"type":"text","text":"that is being validated as "},{"type":"codeVoice","code":"\\.document"},{"type":"text","text":". It also gives you access to the current value"},{"type":"text","text":" "},{"type":"text","text":"being validated as "},{"type":"codeVoice","code":"\\.subject"},{"type":"text","text":" and the current key path as "},{"type":"codeVoice","code":"\\.codingPath"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}],"type":"paragraph"},{"code":["let validator = Validator()","    .validating(","        \"At least two servers are specified if one of them is the test server.\",","        check: \\.document.servers.count >= 2,","        when: take(\\OpenAPI.Document.servers) { servers in","            servers.map { $0.url.absoluteString }.contains(\"https:\/\/test.server.com\")","        }",")"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Context access, the "},{"type":"codeVoice","code":"take()"},{"type":"text","text":" method, and the inequality KeyPath syntax are all"},{"type":"text","text":" "},{"type":"text","text":"allowed in both the "},{"type":"codeVoice","code":"check"},{"type":"text","text":" and "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clauses. Just keep in mind that if you"},{"type":"text","text":" "},{"type":"text","text":"omit information about the type of thing being validated in one clause (as you do"},{"type":"text","text":" "},{"type":"text","text":"when you access "},{"type":"codeVoice","code":"\\.document"},{"type":"text","text":") then you need to indicate the type (perhaps with"},{"type":"text","text":" "},{"type":"text","text":"a KeyPath that includes the full type as in "},{"type":"codeVoice","code":"\\OpenAPI.Document.servers"},{"type":"text","text":" above) in the other clause"},{"type":"text","text":" "},{"type":"text","text":"so the type system knows what you are validating."}],"type":"paragraph"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"]]},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","type":"topic","url":"\/documentation\/openapikit","abstract":[],"title":"OpenAPIKit","role":"collection"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/blank":{"abstract":[{"text":"A validator with no validation rules at all (not","type":"text"},{"text":" ","type":"text"},{"text":"even the defaults).","type":"text"}],"type":"topic","url":"\/documentation\/openapikit\/validator\/blank","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blank","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit9ValidatorC","text":"Validator","kind":"typeIdentifier"}],"title":"blank","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank","role":"symbol","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:)":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","type":"topic","kind":"symbol","title":"validating(_:check:)","abstract":[{"type":"text","text":"Given the description of the correct & valid state being asserted,"},{"type":"text","text":" "},{"type":"text","text":"create a validation function and add it to the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"check","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/openapikit\/validator\/validating(_:check:)","role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-1rozr":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"validating"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">((","kind":"text"},{"text":"ValidationContext","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> [","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","text":"ValidationError","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Add a validation to be performed."}],"type":"topic","url":"\/documentation\/openapikit\/validator\/validating(_:)-1rozr","title":"validating(_:)"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator","role":"symbol","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A validator that works by traversing an ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" object and validating","type":"text"},{"text":" ","type":"text"},{"text":"any values that match an included validation’s type and pass that validation’s","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"type":"topic","url":"\/documentation\/openapikit\/validator","title":"Validator"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:when:)":{"url":"\/documentation\/openapikit\/validator\/validating(_:when:)","role":"symbol","abstract":[{"text":"Add a validation to be performed.","type":"text"}],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> [","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","text":"ValidationError","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"validating(_:when:)","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-5d0t8":{"abstract":[{"text":"Add a validation to be performed.","type":"text"}],"type":"topic","url":"\/documentation\/openapikit\/validator\/validating(_:)-5d0t8","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit10ValidationV","text":"Validation","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"validating(_:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","role":"symbol","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/CodingKey":{"title":"Validator.CodingKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKey"}],"kind":"symbol","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodingKey"}],"url":"\/documentation\/openapikit\/validator\/codingkey","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:when:)":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","type":"topic","kind":"symbol","title":"validating(_:check:when:)","abstract":[{"type":"text","text":"Given the description of the correct & valid state being asserted,"},{"type":"text","text":" "},{"type":"text","text":"create a validation function and add it to the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"check","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/openapikit\/validator\/validating(_:check:when:)","role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/init()":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()","url":"\/documentation\/openapikit\/validator\/init()","abstract":[{"text":"Creates the default ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":". Note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this Validator will perform the default validations."},{"text":" ","type":"text"},{"text":"If you want a Validator that won’t perform any","type":"text"},{"text":" ","type":"text"},{"text":"validations except the ones you add, use","type":"text"},{"text":" ","type":"text"},{"code":"Validator.blank","type":"codeVoice"},{"text":".","type":"text"}],"title":"init()"}}}