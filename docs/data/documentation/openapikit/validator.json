{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The default Validator will perform a set of default validations","type":"text"},{"text":" ","type":"text"},{"text":"that catch OpenAPI Specification violations not possible (or inconvenient) to","type":"text"},{"text":" ","type":"text"},{"text":"prevent using the Swift type-system.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}]},{"syntax":null,"type":"codeListing","code":["let document = OpenAPI.Document(...)","let validator = Validator()","try document.validate(using: validator)","","\/\/ or, equivalently for the default validator:","try document.validate()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default validations are"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Operations must contain at least one response.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Document-level tag names are unique.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameters are unique within each Path Item.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameters are unique within each Operation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operation Ids are unique across the whole Document."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All OpenAPI.References that refer to components in this"},{"type":"text","text":" "},{"type":"text","text":"document can be found in the components dictionary."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If you want a Validator that won’t perform any","type":"text"},{"text":" ","type":"text"},{"text":"validations except the ones you add, use","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Validator.blank"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add validations to the validator using the"},{"type":"text","text":" "},{"code":"validating()","type":"codeVoice"},{"type":"text","text":" instance methods."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are a few default validations that ship with OpenAPIKit but"},{"type":"text","text":" "},{"type":"text","text":"are not used unless explicitly added to a Validator. You can find these"},{"type":"text","text":" "},{"type":"text","text":"validations as static members of the "},{"code":"Validation","type":"codeVoice"},{"type":"text","text":" type."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}]},{"syntax":null,"type":"codeListing","code":["let document = OpenAPI.Document(...)","let validator = Validator()","    .validating(.documentContainsPaths)","    .validating(.pathsContainOperations)","try document.validate(using: validator)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At their core, all validations are values of the "},{"type":"codeVoice","code":"Validation"},{"type":"text","text":" "},{"type":"text","text":"type. You can create validations by initializing the "},{"type":"codeVoice","code":"Validation"},{"type":"text","text":" "},{"type":"text","text":"type directly but it is generally more convenient to add validations"},{"type":"text","text":" "},{"type":"text","text":"to a Validator using one of the convenience "},{"type":"codeVoice","code":"validating()"},{"type":"text","text":" "},{"type":"text","text":"methods that know how to construct "},{"type":"codeVoice","code":"Validation"},{"type":"text","text":" on your behalf."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can construct validation methods for simple equalities"},{"type":"text","text":" "},{"type":"text","text":"and inequalities by specifying the KeyPath from any OpenAPI type to"},{"type":"text","text":" "},{"type":"text","text":"the value you want to validate and then writing the equality\/inequality"},{"type":"text","text":" "},{"type":"text","text":"that must succeed for the validation to pass."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example"}],"type":"strong"}]},{"syntax":null,"type":"codeListing","code":["let validator = Validator()","    .validating(","        \"API version is 2.0\",","        check: \\OpenAPI.Document.Info.version == \"2.0\"",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add a "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause to any validation as long as the "},{"type":"codeVoice","code":"check"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause both examine the same type (i.e. "},{"type":"codeVoice","code":"OpenAPI.Document.Info"},{"type":"text","text":" "},{"type":"text","text":"from the previous example and "},{"type":"codeVoice","code":"OpenAPI.Document"},{"type":"text","text":" from the next example)."}]},{"type":"paragraph","inlineContent":[{"text":"The next example also uses ","type":"text"},{"code":"take()","type":"codeVoice"},{"text":"  in its ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" caluse. This allows you to","type":"text"},{"text":" ","type":"text"},{"text":"dig into a value based on its KeyPath just like the previous example but you can","type":"text"},{"text":" ","type":"text"},{"text":"use it for more complicated criteria than equality\/inequality.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Finally, the next example also introduces the context access KayPath syntax in its","type":"text"},{"text":" ","type":"text"},{"code":"check","type":"codeVoice"},{"text":" clause. This syntax allows you to access the entire OpenAPI Document","type":"text"},{"text":" ","type":"text"},{"text":"that is being validated as ","type":"text"},{"code":"\\.document","type":"codeVoice"},{"text":". It also gives you access to the current value","type":"text"},{"text":" ","type":"text"},{"text":"being validated as ","type":"text"},{"code":"\\.subject","type":"codeVoice"},{"text":" and the current key path as ","type":"text"},{"code":"\\.codingPath","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}]},{"syntax":null,"type":"codeListing","code":["let validator = Validator()","    .validating(","        \"At least two servers are specified if one of them is the test server.\",","        check: \\.document.servers.count >= 2,","        when: take(\\OpenAPI.Document.servers) { servers in","            servers.map { $0.url.absoluteString }.contains(\"https:\/\/test.server.com\")","        }",")"]},{"type":"paragraph","inlineContent":[{"text":"Context access, the ","type":"text"},{"code":"take()","type":"codeVoice"},{"text":" method, and the inequality KeyPath syntax are all","type":"text"},{"text":" ","type":"text"},{"text":"allowed in both the ","type":"text"},{"code":"check","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clauses. Just keep in mind that if you","type":"text"},{"text":" ","type":"text"},{"text":"omit information about the type of thing being validated in one clause (as you do","type":"text"},{"text":" ","type":"text"},{"text":"when you access ","type":"text"},{"code":"\\.document","type":"codeVoice"},{"text":") then you need to indicate the type (perhaps with","type":"text"},{"text":" ","type":"text"},{"text":"a KeyPath that includes the full type as in ","type":"text"},{"code":"\\OpenAPI.Document.servers","type":"codeVoice"},{"text":" above) in the other clause","type":"text"},{"text":" ","type":"text"},{"text":"so the type system knows what you are validating.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/openapikit\/validator"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"]]},"abstract":[{"text":"A validator that works by traversing an ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" object and validating","type":"text"},{"text":" ","type":"text"},{"text":"any values that match an included validation’s type and pass that validation’s","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey"],"title":"Structures"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank"],"title":"Type Properties"}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","externalID":"s:10OpenAPIKit9ValidatorC","title":"Validator","role":"symbol","modules":[{"name":"OpenAPIKit"}],"navigatorTitle":[{"text":"Validator","kind":"identifier"}]},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/Validator":{"kind":"symbol","abstract":[{"type":"text","text":"A validator that works by traversing an "},{"type":"codeVoice","code":"Encodable"},{"text":" object and validating","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any values that match an included validation’s type and pass that validation’s"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Validator"}],"type":"topic","url":"\/documentation\/openapikit\/validator","title":"Validator","navigatorTitle":[{"kind":"identifier","text":"Validator"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/blank":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blank","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Validator","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit9ValidatorC"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank","abstract":[{"text":"A validator with no validation rules at all (not","type":"text"},{"text":" ","type":"text"},{"text":"even the defaults).","type":"text"}],"kind":"symbol","url":"\/documentation\/openapikit\/validator\/blank","title":"blank"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:when:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"check"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","url":"\/documentation\/openapikit\/validator\/validating(_:check:when:)","title":"validating(_:check:when:)","kind":"symbol","abstract":[{"text":"Given the description of the correct & valid state being asserted,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"create a validation function and add it to the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"."}]},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-1rozr":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","text":"ValidationError"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","type":"topic","kind":"symbol","url":"\/documentation\/openapikit\/validator\/validating(_:)-1rozr","title":"validating(_:)","abstract":[{"type":"text","text":"Add a validation to be performed."}],"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/init()":{"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()","type":"topic","title":"init()","abstract":[{"text":"Creates the default ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":". Note that","type":"text"},{"text":" ","type":"text"},{"text":"this Validator will perform the default validations.","type":"text"},{"text":" ","type":"text"},{"text":"If you want a Validator that won’t perform any","type":"text"},{"text":" ","type":"text"},{"text":"validations except the ones you add, use","type":"text"},{"text":" ","type":"text"},{"code":"Validator.blank","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/openapikit\/validator\/init()"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"type":"topic","title":"OpenAPIKit","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","url":"\/documentation\/openapikit","role":"collection","abstract":[]},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-5d0t8":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:10OpenAPIKit10ValidationV","kind":"typeIdentifier","text":"Validation"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"validating(_:)","abstract":[{"text":"Add a validation to be performed.","type":"text"}],"url":"\/documentation\/openapikit\/validator\/validating(_:)-5d0t8","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","type":"topic"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"check"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","type":"topic","kind":"symbol","url":"\/documentation\/openapikit\/validator\/validating(_:check:)","title":"validating(_:check:)","abstract":[{"type":"text","text":"Given the description of the correct & valid state being asserted,"},{"type":"text","text":" "},{"type":"text","text":"create a validation function and add it to the "},{"code":"Validator","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/CodingKey":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CodingKey","kind":"identifier"}],"title":"Validator.CodingKey","abstract":[],"url":"\/documentation\/openapikit\/validator\/codingkey","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey","navigatorTitle":[{"text":"CodingKey","kind":"identifier"}],"type":"topic"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:when:)":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)","url":"\/documentation\/openapikit\/validator\/validating(_:when:)","abstract":[{"type":"text","text":"Add a validation to be performed."}],"title":"validating(_:when:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","text":"ValidationError"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","role":"symbol","type":"topic"}}}