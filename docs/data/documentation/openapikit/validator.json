{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator"},"abstract":[{"text":"A validator that works by traversing an ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" object and validating","type":"text"},{"text":" ","type":"text"},{"text":"any values that match an included validation’s type and pass that validation’s","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Class","modules":[{"name":"OpenAPIKit"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"Validator"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"externalID":"s:10OpenAPIKit9ValidatorC","title":"Validator"},"topicSections":[{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey"],"title":"Structures"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank"],"title":"Type Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/validator"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default Validator will perform a set of default validations"},{"type":"text","text":" "},{"type":"text","text":"that catch OpenAPI Specification violations not possible (or inconvenient) to"},{"type":"text","text":" "},{"type":"text","text":"prevent using the Swift type-system."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example","type":"text"}],"type":"strong"}]},{"syntax":null,"type":"codeListing","code":["let document = OpenAPI.Document(...)","let validator = Validator()","try document.validate(using: validator)","","\/\/ or, equivalently for the default validator:","try document.validate()"]},{"type":"paragraph","inlineContent":[{"text":"The default validations are","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations must contain at least one response."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Document-level tag names are unique."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters are unique within each Path Item."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameters are unique within each Operation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Operation Ids are unique across the whole Document.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All OpenAPI.References that refer to components in this"},{"type":"text","text":" "},{"type":"text","text":"document can be found in the components dictionary."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want a Validator that won’t perform any"},{"type":"text","text":" "},{"type":"text","text":"validations except the ones you add, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"Validator.blank"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"You can add validations to the validator using the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"validating()"},{"text":" instance methods.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"There are a few default validations that ship with OpenAPIKit but","type":"text"},{"text":" ","type":"text"},{"text":"are not used unless explicitly added to a Validator. You can find these","type":"text"},{"text":" ","type":"text"},{"text":"validations as static members of the ","type":"text"},{"code":"Validation","type":"codeVoice"},{"text":" type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}]},{"syntax":null,"type":"codeListing","code":["let document = OpenAPI.Document(...)","let validator = Validator()","    .validating(.documentContainsPaths)","    .validating(.pathsContainOperations)","try document.validate(using: validator)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At their core, all validations are values of the "},{"code":"Validation","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"type. You can create validations by initializing the "},{"code":"Validation","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"type directly but it is generally more convenient to add validations"},{"type":"text","text":" "},{"type":"text","text":"to a Validator using one of the convenience "},{"code":"validating()","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"methods that know how to construct "},{"code":"Validation","type":"codeVoice"},{"type":"text","text":" on your behalf."}]},{"type":"paragraph","inlineContent":[{"text":"For example, you can construct validation methods for simple equalities","type":"text"},{"text":" ","type":"text"},{"text":"and inequalities by specifying the KeyPath from any OpenAPI type to","type":"text"},{"text":" ","type":"text"},{"text":"the value you want to validate and then writing the equality\/inequality","type":"text"},{"text":" ","type":"text"},{"text":"that must succeed for the validation to pass.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}]},{"syntax":null,"type":"codeListing","code":["let validator = Validator()","    .validating(","        \"API version is 2.0\",","        check: \\OpenAPI.Document.Info.version == \"2.0\"",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add a "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause to any validation as long as the "},{"type":"codeVoice","code":"check"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause both examine the same type (i.e. "},{"type":"codeVoice","code":"OpenAPI.Document.Info"},{"type":"text","text":" "},{"type":"text","text":"from the previous example and "},{"type":"codeVoice","code":"OpenAPI.Document"},{"type":"text","text":" from the next example)."}]},{"type":"paragraph","inlineContent":[{"text":"The next example also uses ","type":"text"},{"type":"codeVoice","code":"take()"},{"text":"  in its ","type":"text"},{"type":"codeVoice","code":"where"},{"text":" caluse. This allows you to","type":"text"},{"text":" ","type":"text"},{"text":"dig into a value based on its KeyPath just like the previous example but you can","type":"text"},{"text":" ","type":"text"},{"text":"use it for more complicated criteria than equality\/inequality.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Finally, the next example also introduces the context access KayPath syntax in its","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"check"},{"text":" clause. This syntax allows you to access the entire OpenAPI Document","type":"text"},{"text":" ","type":"text"},{"text":"that is being validated as ","type":"text"},{"type":"codeVoice","code":"\\.document"},{"text":". It also gives you access to the current value","type":"text"},{"text":" ","type":"text"},{"text":"being validated as ","type":"text"},{"type":"codeVoice","code":"\\.subject"},{"text":" and the current key path as ","type":"text"},{"type":"codeVoice","code":"\\.codingPath"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example","type":"text"}],"type":"strong"}]},{"syntax":null,"type":"codeListing","code":["let validator = Validator()","    .validating(","        \"At least two servers are specified if one of them is the test server.\",","        check: \\.document.servers.count >= 2,","        when: take(\\OpenAPI.Document.servers) { servers in","            servers.map { $0.url.absoluteString }.contains(\"https:\/\/test.server.com\")","        }",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Context access, the "},{"code":"take()","type":"codeVoice"},{"type":"text","text":" method, and the inequality KeyPath syntax are all"},{"type":"text","text":" "},{"type":"text","text":"allowed in both the "},{"code":"check","type":"codeVoice"},{"type":"text","text":" and "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clauses. Just keep in mind that if you"},{"type":"text","text":" "},{"type":"text","text":"omit information about the type of thing being validated in one clause (as you do"},{"type":"text","text":" "},{"type":"text","text":"when you access "},{"code":"\\.document","type":"codeVoice"},{"type":"text","text":") then you need to indicate the type (perhaps with"},{"type":"text","text":" "},{"type":"text","text":"a KeyPath that includes the full type as in "},{"code":"\\OpenAPI.Document.servers","type":"codeVoice"},{"type":"text","text":" above) in the other clause"},{"type":"text","text":" "},{"type":"text","text":"so the type system knows what you are validating."}]}]}],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"]]},"sections":[],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-1rozr":{"url":"\/documentation\/openapikit\/validator\/validating(_:)-1rozr","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","abstract":[{"text":"Add a validation to be performed.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"kind":"typeIdentifier","text":"ValidationError","preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"validating(_:)"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/init()":{"url":"\/documentation\/openapikit\/validator\/init()","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()","abstract":[{"text":"Creates the default ","type":"text"},{"type":"codeVoice","code":"Validator"},{"text":". Note that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this Validator will perform the default validations."},{"type":"text","text":" "},{"type":"text","text":"If you want a Validator that won’t perform any"},{"type":"text","text":" "},{"type":"text","text":"validations except the ones you add, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"Validator.blank"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","title":"init()"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"abstract":[],"title":"OpenAPIKit","url":"\/documentation\/openapikit","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/CodingKey":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"CodingKey"}],"title":"Validator.CodingKey","url":"\/documentation\/openapikit\/validator\/codingkey","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodingKey","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:when:)":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> [","kind":"text"},{"text":"ValidationError","preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"validating(_:when:)","type":"topic","url":"\/documentation\/openapikit\/validator\/validating(_:when:)","abstract":[{"text":"Add a validation to be performed.","type":"text"}],"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-5d0t8":{"url":"\/documentation\/openapikit\/validator\/validating(_:)-5d0t8","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","abstract":[{"text":"Add a validation to be performed.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Validation","preciseIdentifier":"s:10OpenAPIKit10ValidationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"validating(_:)"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator":{"abstract":[{"type":"text","text":"A validator that works by traversing an "},{"code":"Encodable","type":"codeVoice"},{"text":" object and validating","type":"text"},{"text":" ","type":"text"},{"text":"any values that match an included validation’s type and pass that validation’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"navigatorTitle":[{"text":"Validator","kind":"identifier"}],"title":"Validator","url":"\/documentation\/openapikit\/validator","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Validator"}],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:when:)":{"url":"\/documentation\/openapikit\/validator\/validating(_:check:when:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","abstract":[{"text":"Given the description of the correct & valid state being asserted,","type":"text"},{"text":" ","type":"text"},{"text":"create a validation function and add it to the ","type":"text"},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"check"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"validating(_:check:when:)"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/blank":{"url":"\/documentation\/openapikit\/validator\/blank","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank","abstract":[{"text":"A validator with no validation rules at all (not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"even the defaults)."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"blank"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:10OpenAPIKit9ValidatorC"}],"type":"topic","title":"blank"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:)":{"url":"\/documentation\/openapikit\/validator\/validating(_:check:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","abstract":[{"type":"text","text":"Given the description of the correct & valid state being asserted,"},{"type":"text","text":" "},{"type":"text","text":"create a validation function and add it to the "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"check","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ValidationContext","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"validating(_:check:)"}}}