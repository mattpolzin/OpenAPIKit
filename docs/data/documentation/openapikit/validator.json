{"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A validator that works by traversing an "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" object and validating"},{"type":"text","text":" "},{"type":"text","text":"any values that match an included validation’s type and pass that validation’s"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The default Validator will perform a set of default validations"},{"type":"text","text":" "},{"type":"text","text":"that catch OpenAPI Specification violations not possible (or inconvenient) to"},{"type":"text","text":" "},{"type":"text","text":"prevent using the Swift type-system."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Example","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["let document = OpenAPI.Document(...)","let validator = Validator()","try document.validate(using: validator)","","\/\/ or, equivalently for the default validator:","try document.validate()"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The default validations are"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations must contain at least one response."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Document-level tag names are unique."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Parameters are unique within each Path Item."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Parameters are unique within each Operation.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Operation Ids are unique across the whole Document.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"All OpenAPI.References that refer to components in this"},{"type":"text","text":" "},{"type":"text","text":"document can be found in the components dictionary."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If you want a Validator that won’t perform any","type":"text"},{"text":" ","type":"text"},{"text":"validations except the ones you add, use","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Validator.blank"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can add validations to the validator using the"},{"type":"text","text":" "},{"code":"validating()","type":"codeVoice"},{"type":"text","text":" instance methods."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There are a few default validations that ship with OpenAPIKit but"},{"type":"text","text":" "},{"type":"text","text":"are not used unless explicitly added to a Validator. You can find these"},{"type":"text","text":" "},{"type":"text","text":"validations as static members of the "},{"code":"Validation","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}],"type":"paragraph"},{"code":["let document = OpenAPI.Document(...)","let validator = Validator()","    .validating(.documentContainsPaths)","    .validating(.pathsContainOperations)","try document.validate(using: validator)"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"At their core, all validations are values of the "},{"type":"codeVoice","code":"Validation"},{"type":"text","text":" "},{"type":"text","text":"type. You can create validations by initializing the "},{"type":"codeVoice","code":"Validation"},{"type":"text","text":" "},{"type":"text","text":"type directly but it is generally more convenient to add validations"},{"type":"text","text":" "},{"type":"text","text":"to a Validator using one of the convenience "},{"type":"codeVoice","code":"validating()"},{"type":"text","text":" "},{"type":"text","text":"methods that know how to construct "},{"type":"codeVoice","code":"Validation"},{"type":"text","text":" on your behalf."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, you can construct validation methods for simple equalities"},{"type":"text","text":" "},{"type":"text","text":"and inequalities by specifying the KeyPath from any OpenAPI type to"},{"type":"text","text":" "},{"type":"text","text":"the value you want to validate and then writing the equality\/inequality"},{"type":"text","text":" "},{"type":"text","text":"that must succeed for the validation to pass."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Example","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["let validator = Validator()","    .validating(","        \"API version is 2.0\",","        check: \\OpenAPI.Document.Info.version == \"2.0\"",")"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"You can add a ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clause to any validation as long as the ","type":"text"},{"code":"check","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clause both examine the same type (i.e. ","type":"text"},{"code":"OpenAPI.Document.Info","type":"codeVoice"},{"text":" ","type":"text"},{"text":"from the previous example and ","type":"text"},{"code":"OpenAPI.Document","type":"codeVoice"},{"text":" from the next example).","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The next example also uses ","type":"text"},{"code":"take()","type":"codeVoice"},{"text":" in its ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clause. This allows you to","type":"text"},{"text":" ","type":"text"},{"text":"dig into a value based on its KeyPath just like the previous example but you can","type":"text"},{"text":" ","type":"text"},{"text":"use it for more complicated criteria than equality\/inequality.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Finally, the next example also introduces the context access KayPath syntax in its","type":"text"},{"text":" ","type":"text"},{"code":"check","type":"codeVoice"},{"text":" clause. This syntax allows you to access the entire OpenAPI Document","type":"text"},{"text":" ","type":"text"},{"text":"that is being validated as ","type":"text"},{"code":"\\.document","type":"codeVoice"},{"text":". It also gives you access to the current value","type":"text"},{"text":" ","type":"text"},{"text":"being validated as ","type":"text"},{"code":"\\.subject","type":"codeVoice"},{"text":" and the current key path as ","type":"text"},{"code":"\\.codingPath","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Example","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["let validator = Validator()","    .validating(","        \"At least two servers are specified if one of them is the test server.\",","        check: \\.document.servers.count >= 2,","        when: take(\\OpenAPI.Document.servers) { servers in","            servers.map { $0.url.absoluteString }.contains(\"https:\/\/test.server.com\")","        }",")"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Context access, the "},{"type":"codeVoice","code":"take()"},{"type":"text","text":" method, and the inequality KeyPath syntax are all"},{"type":"text","text":" "},{"type":"text","text":"allowed in both the "},{"type":"codeVoice","code":"check"},{"type":"text","text":" and "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clauses. Just keep in mind that if you"},{"type":"text","text":" "},{"type":"text","text":"omit information about the type of thing being validated in one clause (as you do"},{"type":"text","text":" "},{"type":"text","text":"when you access "},{"type":"codeVoice","code":"\\.document"},{"type":"text","text":") then you need to indicate the type (perhaps with"},{"type":"text","text":" "},{"type":"text","text":"a KeyPath that includes the full type as in "},{"type":"codeVoice","code":"\\OpenAPI.Document.servers"},{"type":"text","text":" above) in the other clause"},{"type":"text","text":" "},{"type":"text","text":"so the type system knows what you are validating."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/validator"]}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey"]},{"title":"Initializers","identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)"]},{"title":"Type Properties","identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank"]}],"sections":[],"metadata":{"externalID":"s:10OpenAPIKit9ValidatorC","title":"Validator","role":"symbol","symbolKind":"class","roleHeading":"Class","modules":[{"name":"OpenAPIKit"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"navigatorTitle":[{"text":"Validator","kind":"identifier"}]},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:when:)":{"url":"\/documentation\/openapikit\/validator\/validating(_:when:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","text":"ValidationError"},{"text":"], ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:when:)","title":"validating(_:when:)","abstract":[{"type":"text","text":"Add a validation to be performed."}],"type":"topic"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/init()":{"type":"topic","title":"init()","abstract":[{"type":"text","text":"Creates the default "},{"type":"codeVoice","code":"Validator"},{"type":"text","text":". Note that"},{"type":"text","text":" "},{"type":"text","text":"this Validator will perform the default validations."},{"type":"text","text":" "},{"type":"text","text":"If you want a Validator that won’t perform any"},{"type":"text","text":" "},{"type":"text","text":"validations except the ones you add, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"Validator.blank"},{"type":"text","text":"."}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/init()","url":"\/documentation\/openapikit\/validator\/init()","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validating"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"check"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","text":"ValidationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Given the description of the correct & valid state being asserted,","type":"text"},{"text":" ","type":"text"},{"text":"create a validation function and add it to the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","title":"validating(_:check:)","url":"\/documentation\/openapikit\/validator\/validating(_:check:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:)","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator":{"navigatorTitle":[{"kind":"identifier","text":"Validator"}],"url":"\/documentation\/openapikit\/validator","type":"topic","abstract":[{"text":"A validator that works by traversing an ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" object and validating","type":"text"},{"text":" ","type":"text"},{"text":"any values that match an included validation’s type and pass that validation’s","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"title":"Validator","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Validator"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator","role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-1rozr":{"abstract":[{"text":"Add a validation to be performed.","type":"text"}],"url":"\/documentation\/openapikit\/validator\/validating(_:)-1rozr","title":"validating(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"ValidationContext","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> [","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit15ValidationErrorV","text":"ValidationError","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-1rozr","role":"symbol","type":"topic","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:check:when:)":{"type":"topic","url":"\/documentation\/openapikit\/validator\/validating(_:check:when:)","kind":"symbol","title":"validating(_:check:when:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:check:when:)","role":"symbol","abstract":[{"text":"Given the description of the correct & valid state being asserted,","type":"text"},{"text":" ","type":"text"},{"text":"create a validation function and add it to the ","type":"text"},{"code":"Validator","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"check","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ValidationContext","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ValidationContext","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://OpenAPIKit/documentation/OpenAPIKit":{"abstract":[],"url":"\/documentation\/openapikit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","type":"topic","role":"collection","kind":"symbol","title":"OpenAPIKit"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/CodingKey":{"role":"symbol","navigatorTitle":[{"text":"CodingKey","kind":"identifier"}],"url":"\/documentation\/openapikit\/validator\/codingkey","kind":"symbol","title":"Validator.CodingKey","abstract":[],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/CodingKey","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodingKey","kind":"identifier"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/validating(_:)-5d0t8":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"validating","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Validation","kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit10ValidationV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","title":"validating(_:)","url":"\/documentation\/openapikit\/validator\/validating(_:)-5d0t8","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/validating(_:)-5d0t8","abstract":[{"text":"Add a validation to be performed.","type":"text"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/Validator/blank":{"abstract":[{"text":"A validator with no validation rules at all (not","type":"text"},{"text":" ","type":"text"},{"text":"even the defaults).","type":"text"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validator\/blank","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"blank"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Validator","preciseIdentifier":"s:10OpenAPIKit9ValidatorC"}],"type":"topic","title":"blank","url":"\/documentation\/openapikit\/validator\/blank","kind":"symbol","role":"symbol"}}}