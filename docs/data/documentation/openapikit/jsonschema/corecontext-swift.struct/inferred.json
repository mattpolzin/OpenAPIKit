{"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred"},"metadata":{"roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","title":"inferred","externalID":"s:10OpenAPIKit10JSONSchemaV11CoreContextV8inferredSbvp","symbolKind":"property","modules":[{"name":"OpenAPIKit"}]},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"code":"requried","type":"codeVoice"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"infer","type":"text"}]},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"code":"allOf","type":"codeVoice"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"code":"_inferred","type":"codeVoice"},{"text":" ","type":"text"},{"text":"boolean.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This is a non-breaking way to tracking such properties, but a breaking change in the","type":"text"},{"text":" ","type":"text"},{"text":"future might very well represent this more elegantly. For example, maybe a requirement","type":"text"},{"text":" ","type":"text"},{"text":"without a property definition is not a .fragment schema but rather a new case in that","type":"text"},{"text":" ","type":"text"},{"text":"enum.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","title":"JSONSchema","url":"\/documentation\/openapikit\/jsonschema","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONSchema"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JSONSchema","kind":"identifier"}],"abstract":[{"text":"OpenAPI “Schema Object”","type":"text"}],"role":"symbol","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct":{"kind":"symbol","abstract":[{"text":"The context that applies to all schemas.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreContext","kind":"identifier"}],"navigatorTitle":[{"text":"CoreContext","kind":"identifier"}],"title":"JSONSchema.CoreContext","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct","type":"topic","url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","url":"\/documentation\/openapikit","type":"topic","abstract":[],"role":"collection","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct/inferred":{"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","title":"inferred","kind":"symbol","url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}}}