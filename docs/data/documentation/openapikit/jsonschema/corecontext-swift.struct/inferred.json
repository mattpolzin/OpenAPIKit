{"kind":"symbol","variants":[{"paths":["\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct"]]},"metadata":{"role":"symbol","symbolKind":"property","roleHeading":"Instance Property","title":"inferred","externalID":"s:10OpenAPIKit10JSONSchemaV11CoreContextV8inferredSbvp","modules":[{"name":"OpenAPIKit"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"code":"requried","type":"codeVoice"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"We "},{"type":"emphasis","inlineContent":[{"text":"infer","type":"text"}]},{"type":"text","text":" that there is a property by that name (even if only when combined with"},{"type":"text","text":" "},{"type":"text","text":"another schema elsewhere via e.g. "},{"type":"codeVoice","code":"allOf"},{"type":"text","text":"). This inferred schema has no properties"},{"type":"text","text":" "},{"type":"text","text":"except for being required; it can be differentiated from a schema that was explicitly"},{"type":"text","text":" "},{"type":"text","text":"given in the parsed JSON Schema to have no properties via this internal "},{"type":"codeVoice","code":"_inferred"},{"type":"text","text":" "},{"type":"text","text":"boolean."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred"},"abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema":{"role":"symbol","abstract":[{"type":"text","text":"OpenAPI “Schema Object”"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSchema","kind":"identifier"}],"url":"\/documentation\/openapikit\/jsonschema","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","kind":"symbol","navigatorTitle":[{"text":"JSONSchema","kind":"identifier"}],"title":"JSONSchema"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"role":"collection","abstract":[],"url":"\/documentation\/openapikit","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","kind":"symbol","title":"OpenAPIKit"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct/inferred":{"role":"symbol","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","kind":"symbol","title":"inferred"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct":{"title":"JSONSchema.CoreContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreContext","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"CoreContext","kind":"identifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct","abstract":[{"text":"The context that applies to all schemas.","type":"text"}],"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct"}}}