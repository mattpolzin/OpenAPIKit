{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"inferred","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"type":"codeVoice","code":"requried"},{"text":" entry in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object and that object has no property with the same name as the requirement."},{"type":"text","text":" "},{"type":"text","text":"We "},{"type":"emphasis","inlineContent":[{"type":"text","text":"infer"}]},{"type":"text","text":" that there is a property by that name (even if only when combined with"},{"type":"text","text":" "},{"type":"text","text":"another schema elsewhere via e.g. "},{"code":"allOf","type":"codeVoice"},{"type":"text","text":"). This inferred schema has no properties"},{"type":"text","text":" "},{"type":"text","text":"except for being required; it can be differentiated from a schema that was explicitly"},{"type":"text","text":" "},{"type":"text","text":"given in the parsed JSON Schema to have no properties via this internal "},{"code":"_inferred","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"boolean."}],"type":"paragraph"},{"inlineContent":[{"text":"This is a non-breaking way to tracking such properties, but a breaking change in the","type":"text"},{"text":" ","type":"text"},{"text":"future might very well represent this more elegantly. For example, maybe a requirement","type":"text"},{"text":" ","type":"text"},{"text":"without a property definition is not a .fragment schema but rather a new case in that","type":"text"},{"text":" ","type":"text"},{"text":"enum.","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","externalID":"s:10OpenAPIKit10JSONSchemaV11CoreContextV8inferredSbvp","title":"inferred","symbolKind":"property","modules":[{"name":"OpenAPIKit"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct"]]},"sections":[],"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"variants":[{"paths":["\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema":{"navigatorTitle":[{"text":"JSONSchema","kind":"identifier"}],"kind":"symbol","type":"topic","title":"JSONSchema","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","url":"\/documentation\/openapikit\/jsonschema","abstract":[{"text":"OpenAPI “Schema Object”","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSchema","kind":"identifier"}],"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct":{"navigatorTitle":[{"text":"CoreContext","kind":"identifier"}],"kind":"symbol","type":"topic","title":"JSONSchema.CoreContext","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct","url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct","abstract":[{"text":"The context that applies to all schemas.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreContext","kind":"identifier"}],"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct/inferred":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","title":"inferred","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inferred to exist based on surroundings."}],"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","type":"topic","title":"OpenAPIKit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","url":"\/documentation\/openapikit","abstract":[],"role":"collection"}}}