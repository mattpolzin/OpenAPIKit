{"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"type":"codeVoice","code":"requried"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"infer","type":"text"}]},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"type":"codeVoice","code":"allOf"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"type":"codeVoice","code":"_inferred"},{"text":" ","type":"text"},{"text":"boolean.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"OpenAPIKit"}],"symbolKind":"property","role":"symbol","roleHeading":"Instance Property","title":"inferred","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"externalID":"s:10OpenAPIKit10JSONSchemaV11CoreContextV8inferredSbvp"},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct/inferred":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","type":"topic","abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"text":"inferred to exist based on surroundings.","type":"text"}],"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred","title":"inferred","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema":{"navigatorTitle":[{"kind":"identifier","text":"JSONSchema"}],"url":"\/documentation\/openapikit\/jsonschema","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"OpenAPI “Schema Object”"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONSchema","kind":"identifier"}],"title":"JSONSchema"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"url":"\/documentation\/openapikit","kind":"symbol","abstract":[],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","type":"topic","role":"collection","title":"OpenAPIKit"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct","type":"topic","abstract":[{"text":"The context that applies to all schemas.","type":"text"}],"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct","title":"JSONSchema.CoreContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreContext"}],"navigatorTitle":[{"kind":"identifier","text":"CoreContext"}]}}}