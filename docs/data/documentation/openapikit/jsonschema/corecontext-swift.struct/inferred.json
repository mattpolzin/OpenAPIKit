{"sections":[],"metadata":{"title":"inferred","externalID":"s:10OpenAPIKit10JSONSchemaV11CoreContextV8inferredSbvp","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","modules":[{"name":"OpenAPIKit"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"variants":[{"paths":["\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct"]]},"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"code":"requried","type":"codeVoice"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"inlineContent":[{"text":"infer","type":"text"}],"type":"emphasis"},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"code":"allOf","type":"codeVoice"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"code":"_inferred","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"boolean."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred"},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema":{"kind":"symbol","abstract":[{"text":"OpenAPI “Schema Object”","type":"text"}],"title":"JSONSchema","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSchema"}],"type":"topic","role":"symbol","url":"\/documentation\/openapikit\/jsonschema","navigatorTitle":[{"text":"JSONSchema","kind":"identifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct/inferred":{"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","title":"inferred","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct":{"role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct","navigatorTitle":[{"text":"CoreContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreContext","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The context that applies to all schemas."}],"title":"JSONSchema.CoreContext","url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","abstract":[],"title":"OpenAPIKit","type":"topic","role":"collection","url":"\/documentation\/openapikit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"}}}