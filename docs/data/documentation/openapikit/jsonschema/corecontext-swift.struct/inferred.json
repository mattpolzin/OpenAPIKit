{"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"title":"inferred","symbolKind":"property","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"modules":[{"name":"OpenAPIKit"}],"externalID":"s:10OpenAPIKit10JSONSchemaV11CoreContextV8inferredSbvp","role":"symbol","roleHeading":"Instance Property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"The only currently known case of this is when we parse a "},{"type":"codeVoice","code":"requried"},{"type":"text","text":" entry in an"},{"type":"text","text":" "},{"type":"text","text":"object and that object has no property with the same name as the requirement."},{"type":"text","text":" "},{"type":"text","text":"We "},{"type":"emphasis","inlineContent":[{"type":"text","text":"infer"}]},{"type":"text","text":" that there is a property by that name (even if only when combined with"},{"type":"text","text":" "},{"type":"text","text":"another schema elsewhere via e.g. "},{"type":"codeVoice","code":"allOf"},{"type":"text","text":"). This inferred schema has no properties"},{"type":"text","text":" "},{"type":"text","text":"except for being required; it can be differentiated from a schema that was explicitly"},{"type":"text","text":" "},{"type":"text","text":"given in the parsed JSON Schema to have no properties via this internal "},{"type":"codeVoice","code":"_inferred"},{"type":"text","text":" "},{"type":"text","text":"boolean."}],"type":"paragraph"},{"inlineContent":[{"text":"This is a non-breaking way to tracking such properties, but a breaking change in the","type":"text"},{"text":" ","type":"text"},{"text":"future might very well represent this more elegantly. For example, maybe a requirement","type":"text"},{"text":" ","type":"text"},{"text":"without a property definition is not a .fragment schema but rather a new case in that","type":"text"},{"text":" ","type":"text"},{"text":"enum.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct"]]},"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","interfaceLanguage":"swift"},"sections":[],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema","url":"\/documentation\/openapikit\/jsonschema","navigatorTitle":[{"text":"JSONSchema","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSchema"}],"role":"symbol","kind":"symbol","title":"JSONSchema","type":"topic","abstract":[{"text":"OpenAPI “Schema Object”","type":"text"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct/inferred":{"type":"topic","title":"inferred","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct\/inferred","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct\/inferred","abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchema/CoreContext-swift.struct":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/openapikit\/jsonschema\/corecontext-swift.struct","navigatorTitle":[{"text":"CoreContext","kind":"identifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchema\/CoreContext-swift.struct","title":"JSONSchema.CoreContext","abstract":[{"text":"The context that applies to all schemas.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreContext"}]},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","role":"collection","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","abstract":[],"type":"topic","url":"\/documentation\/openapikit"}}}