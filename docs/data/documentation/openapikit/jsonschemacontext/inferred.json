{"variants":[{"paths":["\/documentation\/openapikit\/jsonschemacontext\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"code":"requried","type":"codeVoice"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"inlineContent":[{"type":"text","text":"infer"}],"type":"emphasis"},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"code":"allOf","type":"codeVoice"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"code":"_inferred","type":"codeVoice"},{"text":" ","type":"text"},{"text":"boolean.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This is a non-breaking way to tracking such properties, but a breaking change in the","type":"text"},{"text":" ","type":"text"},{"text":"future might very well represent this more elegantly. For example, maybe a requirement","type":"text"},{"text":" ","type":"text"},{"text":"without a property definition is not a .fragment schema but rather a new case in that","type":"text"},{"text":" ","type":"text"},{"text":"enum.","type":"text"}]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"metadata":{"roleHeading":"Instance Property","symbolKind":"property","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:10OpenAPIKit17JSONSchemaContextP8inferredSbvp","role":"symbol","title":"inferred","modules":[{"name":"OpenAPIKit"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred":{"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/openapikit\/jsonschemacontext\/inferred","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred","type":"topic","role":"symbol","title":"inferred","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inferred to exist based on surroundings."}],"kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"kind":"symbol","abstract":[{"text":"A schema context stores information about a schema.","type":"text"},{"text":" ","type":"text"},{"text":"All schemas can have the contextual information in","type":"text"},{"text":" ","type":"text"},{"text":"this protocol.","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSchemaContext","kind":"identifier"}],"navigatorTitle":[{"text":"JSONSchemaContext","kind":"identifier"}],"title":"JSONSchemaContext","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","type":"topic","url":"\/documentation\/openapikit\/jsonschemacontext"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","url":"\/documentation\/openapikit","type":"topic","abstract":[],"role":"collection","kind":"symbol"}}}