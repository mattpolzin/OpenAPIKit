{"metadata":{"role":"symbol","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"required":true,"modules":[{"name":"OpenAPIKit"}],"externalID":"s:10OpenAPIKit17JSONSchemaContextP8inferredSbvp","title":"inferred","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"type":"codeVoice","code":"requried"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"infer","type":"text"}]},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"type":"codeVoice","code":"allOf"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"type":"codeVoice","code":"_inferred"},{"text":" ","type":"text"},{"text":"boolean.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsonschemacontext\/inferred"]}],"abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred","interfaceLanguage":"swift"},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred":{"title":"inferred","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext\/inferred","role":"symbol","required":true,"abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"abstract":[{"type":"text","text":"A schema context stores information about a schema."},{"type":"text","text":" "},{"text":"All schemas can have the contextual information in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this protocol."}],"type":"topic","navigatorTitle":[{"text":"JSONSchemaContext","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext","title":"JSONSchemaContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSchemaContext","kind":"identifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"type":"topic","url":"\/documentation\/openapikit","abstract":[],"role":"collection","title":"OpenAPIKit","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit"}}}