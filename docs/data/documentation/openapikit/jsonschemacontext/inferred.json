{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"code":"requried","type":"codeVoice"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"inlineContent":[{"type":"text","text":"infer"}],"type":"emphasis"},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"code":"allOf","type":"codeVoice"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"code":"_inferred","type":"codeVoice"},{"text":" ","type":"text"},{"text":"boolean.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}],"type":"paragraph"}]}],"metadata":{"title":"inferred","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"symbolKind":"property","externalID":"s:10OpenAPIKit17JSONSchemaContextP8inferredSbvp","modules":[{"name":"OpenAPIKit"}],"required":true,"roleHeading":"Instance Property","role":"symbol"},"abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred"},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsonschemacontext\/inferred"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit":{"title":"OpenAPIKit","abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","url":"\/documentation\/openapikit","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred":{"title":"inferred","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred","kind":"symbol","type":"topic","url":"\/documentation\/openapikit\/jsonschemacontext\/inferred","required":true,"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSchemaContext"}],"navigatorTitle":[{"kind":"identifier","text":"JSONSchemaContext"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","title":"JSONSchemaContext","role":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext","abstract":[{"type":"text","text":"A schema context stores information about a schema."},{"type":"text","text":" "},{"type":"text","text":"All schemas can have the contextual information in"},{"type":"text","text":" "},{"type":"text","text":"this protocol."}],"kind":"symbol","type":"topic"}}}