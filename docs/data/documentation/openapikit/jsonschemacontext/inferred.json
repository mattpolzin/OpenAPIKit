{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The only currently known case of this is when we parse a "},{"code":"requried","type":"codeVoice"},{"type":"text","text":" entry in an"},{"type":"text","text":" "},{"type":"text","text":"object and that object has no property with the same name as the requirement."},{"type":"text","text":" "},{"type":"text","text":"We "},{"type":"emphasis","inlineContent":[{"type":"text","text":"infer"}]},{"type":"text","text":" that there is a property by that name (even if only when combined with"},{"type":"text","text":" "},{"type":"text","text":"another schema elsewhere via e.g. "},{"code":"allOf","type":"codeVoice"},{"type":"text","text":"). This inferred schema has no properties"},{"type":"text","text":" "},{"type":"text","text":"except for being required; it can be differentiated from a schema that was explicitly"},{"type":"text","text":" "},{"type":"text","text":"given in the parsed JSON Schema to have no properties via this internal "},{"code":"_inferred","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"boolean."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}]}],"kind":"content"}],"metadata":{"title":"inferred","required":true,"externalID":"s:10OpenAPIKit17JSONSchemaContextP8inferredSbvp","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"modules":[{"name":"OpenAPIKit"}],"roleHeading":"Instance Property","symbolKind":"property"},"variants":[{"paths":["\/documentation\/openapikit\/jsonschemacontext\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred"},"kind":"symbol","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"sections":[],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit":{"abstract":[],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","kind":"symbol","title":"OpenAPIKit","url":"\/documentation\/openapikit","role":"collection"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"title":"JSONSchemaContext","kind":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext","navigatorTitle":[{"kind":"identifier","text":"JSONSchemaContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSchemaContext"}],"abstract":[{"type":"text","text":"A schema context stores information about a schema."},{"type":"text","text":" "},{"type":"text","text":"All schemas can have the contextual information in"},{"type":"text","text":" "},{"type":"text","text":"this protocol."}],"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/openapikit\/jsonschemacontext\/inferred","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred","kind":"symbol","title":"inferred","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"role":"symbol","type":"topic","required":true}}}