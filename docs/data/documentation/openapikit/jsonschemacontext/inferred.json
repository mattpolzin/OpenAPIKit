{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred"},"kind":"symbol","abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"metadata":{"role":"symbol","required":true,"title":"inferred","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"OpenAPIKit"}],"externalID":"s:10OpenAPIKit17JSONSchemaContextP8inferredSbvp","roleHeading":"Instance Property","symbolKind":"property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The only currently known case of this is when we parse a "},{"type":"codeVoice","code":"requried"},{"type":"text","text":" entry in an"},{"type":"text","text":" "},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"inlineContent":[{"type":"text","text":"infer"}],"type":"emphasis"},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"another schema elsewhere via e.g. "},{"type":"codeVoice","code":"allOf"},{"type":"text","text":"). This inferred schema has no properties"},{"type":"text","text":" "},{"type":"text","text":"except for being required; it can be differentiated from a schema that was explicitly"},{"type":"text","text":" "},{"type":"text","text":"given in the parsed JSON Schema to have no properties via this internal "},{"type":"codeVoice","code":"_inferred"},{"type":"text","text":" "},{"type":"text","text":"boolean."}],"type":"paragraph"},{"inlineContent":[{"text":"This is a non-breaking way to tracking such properties, but a breaking change in the","type":"text"},{"text":" ","type":"text"},{"text":"future might very well represent this more elegantly. For example, maybe a requirement","type":"text"},{"text":" ","type":"text"},{"text":"without a property definition is not a .fragment schema but rather a new case in that","type":"text"},{"text":" ","type":"text"},{"text":"enum.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"sections":[],"variants":[{"paths":["\/documentation\/openapikit\/jsonschemacontext\/inferred"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inferred to exist based on surroundings."}],"role":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferred","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext\/inferred","type":"topic","title":"inferred"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","title":"JSONSchemaContext","navigatorTitle":[{"kind":"identifier","text":"JSONSchemaContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSchemaContext"}],"kind":"symbol","role":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext","type":"topic","abstract":[{"text":"A schema context stores information about a schema.","type":"text"},{"text":" ","type":"text"},{"text":"All schemas can have the contextual information in","type":"text"},{"text":" ","type":"text"},{"text":"this protocol.","type":"text"}]},"doc://OpenAPIKit/documentation/OpenAPIKit":{"abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/openapikit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","type":"topic"}}}