{"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","modules":[{"name":"OpenAPIKit"}],"roleHeading":"Instance Property","title":"inferred","externalID":"s:10OpenAPIKit17JSONSchemaContextP8inferredSbvp","required":true},"kind":"symbol","abstract":[{"text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather","type":"text"},{"text":" ","type":"text"},{"text":"inferred to exist based on surroundings.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred-9hiyz"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsonschemacontext\/inferred-9hiyz"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"defaultImplementationsSections":[{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred-97ovg"],"title":"JSONSchemaContext Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The only currently known case of this is when we parse a ","type":"text"},{"type":"codeVoice","code":"requried"},{"text":" entry in an","type":"text"},{"text":" ","type":"text"},{"text":"object and that object has no property with the same name as the requirement.","type":"text"},{"text":" ","type":"text"},{"text":"We ","type":"text"},{"inlineContent":[{"type":"text","text":"infer"}],"type":"emphasis"},{"text":" that there is a property by that name (even if only when combined with","type":"text"},{"text":" ","type":"text"},{"text":"another schema elsewhere via e.g. ","type":"text"},{"type":"codeVoice","code":"allOf"},{"text":"). This inferred schema has no properties","type":"text"},{"text":" ","type":"text"},{"text":"except for being required; it can be differentiated from a schema that was explicitly","type":"text"},{"text":" ","type":"text"},{"text":"given in the parsed JSON Schema to have no properties via this internal ","type":"text"},{"type":"codeVoice","code":"_inferred"},{"text":" ","type":"text"},{"text":"boolean.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a non-breaking way to tracking such properties, but a breaking change in the"},{"type":"text","text":" "},{"type":"text","text":"future might very well represent this more elegantly. For example, maybe a requirement"},{"type":"text","text":" "},{"type":"text","text":"without a property definition is not a .fragment schema but rather a new case in that"},{"type":"text","text":" "},{"type":"text","text":"enum."}]}]}],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"abstract":[{"text":"A schema context stores information about a schema.","type":"text"},{"text":" ","type":"text"},{"text":"All schemas can have the contextual information in","type":"text"},{"text":" ","type":"text"},{"text":"this protocol.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSchemaContext","kind":"identifier"}],"navigatorTitle":[{"text":"JSONSchemaContext","kind":"identifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","role":"symbol","url":"\/documentation\/openapikit\/jsonschemacontext","title":"JSONSchemaContext","kind":"symbol","type":"topic"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred-9hiyz":{"url":"\/documentation\/openapikit\/jsonschemacontext\/inferred-9hiyz","abstract":[{"type":"text","text":"A schema is “inferred” if it was not actually parsed as a JSON Schema but rather"},{"type":"text","text":" "},{"type":"text","text":"inferred to exist based on surroundings."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred-9hiyz","title":"inferred","type":"topic","required":true,"defaultImplementations":1},"doc://OpenAPIKit/documentation/OpenAPIKit":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/openapikit","title":"OpenAPIKit","abstract":[]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/inferred-97ovg":{"url":"\/documentation\/openapikit\/jsonschemacontext\/inferred-97ovg","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inferred"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/inferred-97ovg","title":"inferred","type":"topic"}}}