{"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/allowedValues","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"The OpenAPI spec calls this “enum”","type":"text"}],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"metadata":{"title":"allowedValues","externalID":"s:10OpenAPIKit17JSONSchemaContextP13allowedValuesSay0aB4Core10AnyCodableVGSgvp","roleHeading":"Instance Property","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowedValues","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:14OpenAPIKitCore10AnyCodableV","text":"AnyCodable","kind":"typeIdentifier"},{"text":"]?","kind":"text"}],"modules":[{"name":"OpenAPIKit"}],"symbolKind":"property","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowedValues"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"AnyCodable","preciseIdentifier":"s:14OpenAPIKitCore10AnyCodableV"},{"kind":"text","text":"]? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"If not specified, it is assumed that any","type":"text"},{"text":" ","type":"text"},{"text":"value of the given format is allowed.","type":"text"},{"text":" ","type":"text"},{"text":"NOTE: I would like the array of allowed","type":"text"},{"text":" ","type":"text"},{"text":"values to have the type ","type":"text"},{"type":"codeVoice","code":"Format.SwiftType"},{"text":" ","type":"text"},{"text":"but this is not tractable because I also","type":"text"},{"text":" ","type":"text"},{"text":"want to be able to automatically turn any","type":"text"},{"text":" ","type":"text"},{"text":"Swift type that will get ","type":"text"},{"inlineContent":[{"type":"text","text":"encoded as"},{"type":"text","text":" "},{"type":"text","text":"something compatible with"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Format.SwiftType"},{"text":" ","type":"text"},{"text":"into an allowed value.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/openapikit\/jsonschemacontext\/allowedvalues"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/allowedValues":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/allowedValues","type":"topic","url":"\/documentation\/openapikit\/jsonschemacontext\/allowedvalues","abstract":[{"text":"The OpenAPI spec calls this “enum”","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowedValues"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"AnyCodable","preciseIdentifier":"s:14OpenAPIKitCore10AnyCodableV"},{"kind":"text","text":"]?"}],"title":"allowedValues","kind":"symbol","required":true,"role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","role":"collection","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","abstract":[],"type":"topic","url":"\/documentation\/openapikit"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"navigatorTitle":[{"text":"JSONSchemaContext","kind":"identifier"}],"abstract":[{"text":"A schema context stores information about a schema.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"All schemas can have the contextual information in"},{"type":"text","text":" "},{"text":"this protocol.","type":"text"}],"type":"topic","url":"\/documentation\/openapikit\/jsonschemacontext","title":"JSONSchemaContext","role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSchemaContext","kind":"identifier"}],"kind":"symbol"}}}