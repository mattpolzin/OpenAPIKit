{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowedValues","kind":"identifier"},{"text":": [","kind":"text"},{"text":"AnyCodable","preciseIdentifier":"s:14OpenAPIKitCore10AnyCodableV","kind":"typeIdentifier"},{"text":"]? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"If not specified, it is assumed that any"},{"type":"text","text":" "},{"type":"text","text":"value of the given format is allowed."},{"type":"text","text":" "},{"type":"text","text":"NOTE: I would like the array of allowed"},{"type":"text","text":" "},{"type":"text","text":"values to have the type "},{"type":"codeVoice","code":"Format.SwiftType"},{"type":"text","text":" "},{"type":"text","text":"but this is not tractable because I also"},{"type":"text","text":" "},{"type":"text","text":"want to be able to automatically turn any"},{"type":"text","text":" "},{"type":"text","text":"Swift type that will get "},{"type":"emphasis","inlineContent":[{"type":"text","text":"encoded as"},{"type":"text","text":" "},{"type":"text","text":"something compatible with"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"Format.SwiftType"},{"type":"text","text":" "},{"type":"text","text":"into an allowed value."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Property","externalID":"s:10OpenAPIKit17JSONSchemaContextP13allowedValuesSay0aB4Core10AnyCodableVGSgvp","role":"symbol","symbolKind":"property","modules":[{"name":"OpenAPIKit"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"allowedValues","kind":"identifier"},{"text":": [","kind":"text"},{"text":"AnyCodable","kind":"typeIdentifier","preciseIdentifier":"s:14OpenAPIKitCore10AnyCodableV"},{"text":"]?","kind":"text"}],"title":"allowedValues","required":true},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext"]]},"abstract":[{"type":"text","text":"The OpenAPI spec calls this “enum”"}],"variants":[{"paths":["\/documentation\/openapikit\/jsonschemacontext\/allowedvalues"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/allowedValues","interfaceLanguage":"swift"},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit":{"url":"\/documentation\/openapikit","kind":"symbol","abstract":[],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","type":"topic","role":"collection","title":"OpenAPIKit"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext","type":"topic","abstract":[{"text":"A schema context stores information about a schema.","type":"text"},{"type":"text","text":" "},{"text":"All schemas can have the contextual information in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this protocol."}],"url":"\/documentation\/openapikit\/jsonschemacontext","title":"JSONSchemaContext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSchemaContext"}],"navigatorTitle":[{"text":"JSONSchemaContext","kind":"identifier"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONSchemaContext/allowedValues":{"required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowedValues"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:14OpenAPIKitCore10AnyCodableV","kind":"typeIdentifier","text":"AnyCodable"},{"kind":"text","text":"]?"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONSchemaContext\/allowedValues","url":"\/documentation\/openapikit\/jsonschemacontext\/allowedvalues","title":"allowedValues","abstract":[{"text":"The OpenAPI spec calls this “enum”","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"}}}