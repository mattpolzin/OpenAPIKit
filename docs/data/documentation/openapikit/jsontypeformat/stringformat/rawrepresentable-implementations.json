{"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat"]]},"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","title":"RawRepresentable Implementations","roleHeading":"API Collection","modules":[{"name":"OpenAPIKit"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","variants":[{"paths":["\/documentation\/openapikit\/jsontypeformat\/stringformat\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"generated":true,"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)"],"title":"Instance Methods"}],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat":{"navigatorTitle":[{"text":"StringFormat","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The allowed “format” properties for ","type":"text"},{"type":"codeVoice","code":".string"},{"text":" schemas.","type":"text"}],"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringFormat","kind":"identifier"}],"title":"JSONTypeFormat.StringFormat","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","type":"topic","role":"collection","title":"OpenAPIKit","url":"\/documentation\/openapikit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","abstract":[]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/init(from:)":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)","kind":"symbol","role":"symbol","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)","type":"topic","title":"init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONTypeFormat"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONTypeFormat"}],"title":"JSONTypeFormat","url":"\/documentation\/openapikit\/jsontypeformat","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","abstract":[{"type":"text","text":"The combination of a JSON Schema type and format."}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/encode(to:)":{"abstract":[],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/encode(to:)","kind":"symbol","title":"encode(to:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":", ","type":"text"},{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}}}