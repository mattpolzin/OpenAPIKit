{"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat"]]},"metadata":{"modules":[{"name":"OpenAPIKit"}],"roleHeading":"API Collection","role":"collectionGroup","title":"RawRepresentable Implementations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/openapikit\/jsontypeformat\/stringformat\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations"},"kind":"article","topicSections":[{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)"],"generated":true,"title":"Instance Methods"}],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat":{"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StringFormat"}],"type":"topic","title":"JSONTypeFormat.StringFormat","abstract":[{"text":"The allowed “format” properties for ","type":"text"},{"code":".string","type":"codeVoice"},{"text":" schemas.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringFormat"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat":{"title":"JSONTypeFormat","role":"symbol","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONTypeFormat","kind":"identifier"}],"navigatorTitle":[{"text":"JSONTypeFormat","kind":"identifier"}],"abstract":[{"type":"text","text":"The combination of a JSON Schema type and format."}],"url":"\/documentation\/openapikit\/jsontypeformat"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"abstract":[],"title":"OpenAPIKit","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","role":"collection","url":"\/documentation\/openapikit","type":"topic"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/init(from:)":{"type":"topic","title":"init(from:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)","role":"symbol","kind":"symbol","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/encode(to:)":{"type":"topic","title":"encode(to:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)","role":"symbol","kind":"symbol","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/encode(to:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}