{"topicSections":[{"generated":true,"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)"],"title":"Instance Methods"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/openapikit\/jsontypeformat\/stringformat\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"OpenAPIKit"}],"title":"RawRepresentable Implementations"},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat"]]},"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"kind":"article","references":{"doc://OpenAPIKit/documentation/OpenAPIKit":{"abstract":[],"url":"\/documentation\/openapikit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","kind":"symbol","type":"topic","role":"collection","title":"OpenAPIKit"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat":{"abstract":[{"text":"The combination of a JSON Schema type and format.","type":"text"}],"url":"\/documentation\/openapikit\/jsontypeformat","navigatorTitle":[{"kind":"identifier","text":"JSONTypeFormat"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONTypeFormat"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","kind":"symbol","type":"topic","role":"symbol","title":"JSONTypeFormat"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat":{"abstract":[{"type":"text","text":"The allowed “format” properties for "},{"type":"codeVoice","code":".string"},{"text":" schemas.","type":"text"}],"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat","navigatorTitle":[{"text":"StringFormat","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"StringFormat","kind":"identifier"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat","kind":"symbol","type":"topic","role":"symbol","title":"JSONTypeFormat.StringFormat"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/encode(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"type":"topic","role":"symbol","title":"encode(to:)","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/encode(to:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/init(from:)":{"abstract":[],"title":"init(from:)","kind":"symbol","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)","role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic"}}}