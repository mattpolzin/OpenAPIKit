{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)"],"generated":true}],"variants":[{"paths":["\/documentation\/openapikit\/jsontypeformat\/stringformat\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"API Collection","modules":[{"name":"OpenAPIKit"}],"title":"RawRepresentable Implementations","role":"collectionGroup"},"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat"]]},"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat":{"kind":"symbol","title":"JSONTypeFormat.StringFormat","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringFormat"}],"role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat","abstract":[{"type":"text","text":"The allowed “format” properties for "},{"type":"codeVoice","code":".string"},{"type":"text","text":" schemas."}],"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"StringFormat","kind":"identifier"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/init(from:)":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(from:)","role":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat":{"kind":"symbol","title":"JSONTypeFormat","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONTypeFormat"}],"role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","abstract":[{"type":"text","text":"The combination of a JSON Schema type and format."}],"url":"\/documentation\/openapikit\/jsontypeformat","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"JSONTypeFormat","kind":"identifier"}]},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","title":"OpenAPIKit","type":"topic","role":"collection","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","abstract":[],"url":"\/documentation\/openapikit"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/encode(to:)":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/encode(to:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"encode(to:)","role":"symbol"}}}