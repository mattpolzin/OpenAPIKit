{"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat"]]},"metadata":{"title":"RawRepresentable Implementations","roleHeading":"API Collection","modules":[{"name":"OpenAPIKit"}],"role":"collectionGroup"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)"],"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsontypeformat\/stringformat\/rawrepresentable-implementations"]}],"kind":"article","references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat":{"abstract":[{"type":"text","text":"The combination of a JSON Schema type and format."}],"role":"symbol","type":"topic","url":"\/documentation\/openapikit\/jsontypeformat","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONTypeFormat"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONTypeFormat"}],"title":"JSONTypeFormat","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat":{"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat","abstract":[{"type":"text","text":"The allowed “format” properties for "},{"type":"codeVoice","code":".string"},{"text":" schemas.","type":"text"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringFormat"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StringFormat"}],"kind":"symbol","type":"topic","title":"JSONTypeFormat.StringFormat"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/encode(to:)":{"kind":"symbol","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/encode(to:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"encode(to:)","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/encode(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[]},"doc://OpenAPIKit/documentation/OpenAPIKit":{"type":"topic","url":"\/documentation\/openapikit","role":"collection","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","abstract":[],"kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/init(from:)":{"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)","type":"topic","abstract":[],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"title":"init(from:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}