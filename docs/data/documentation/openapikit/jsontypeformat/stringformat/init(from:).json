{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)"},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"relatedModules":["Swift"],"name":"OpenAPIKit"}],"symbolKind":"init","extendedModule":"Swift","roleHeading":"Initializer","externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:10OpenAPIKit14JSONTypeFormatO06StringD0O","title":"init(from:)","role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.init(from:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations"]]},"kind":"symbol","references":{"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/RawRepresentable-Implementations","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/rawrepresentable-implementations"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat":{"navigatorTitle":[{"text":"JSONTypeFormat","kind":"identifier"}],"url":"\/documentation\/openapikit\/jsontypeformat","abstract":[{"type":"text","text":"The combination of a JSON Schema type and format."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONTypeFormat","kind":"identifier"}],"title":"JSONTypeFormat","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat"},"doc://OpenAPIKit/documentation/OpenAPIKit":{"kind":"symbol","role":"collection","title":"OpenAPIKit","url":"\/documentation\/openapikit","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","type":"topic","abstract":[]},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat/init(from:)":{"title":"init(from:)","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat\/init(from:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","kind":"symbol","url":"\/documentation\/openapikit\/jsontypeformat\/stringformat\/init(from:)"},"doc://OpenAPIKit/documentation/OpenAPIKit/JSONTypeFormat/StringFormat":{"role":"symbol","navigatorTitle":[{"text":"StringFormat","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The allowed “format” properties for "},{"code":".string","type":"codeVoice"},{"type":"text","text":" schemas."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringFormat","kind":"identifier"}],"url":"\/documentation\/openapikit\/jsontypeformat\/stringformat","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/JSONTypeFormat\/StringFormat","title":"JSONTypeFormat.StringFormat"}}}