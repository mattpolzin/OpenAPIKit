{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openapikit\/externalloader\/load(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10OpenAPIKit14ExternalLoaderP7MessageQa","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ExternalLoader\/Message","text":"Message","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"}]}]}],"metadata":{"externalID":"s:10OpenAPIKit14ExternalLoaderP4loadyqd___Say7MessageQzGt10Foundation3URLVYaKSeRd__lFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit14ExternalLoaderP7MessageQa","text":"Message"},{"kind":"text","text":"])"}],"required":true,"modules":[{"name":"OpenAPIKit"}],"role":"symbol","symbolKind":"method","roleHeading":"Type Method","title":"load(_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ExternalLoader\/load(_:)"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ExternalLoader"]]},"abstract":[{"type":"text","text":"Load the given URL and decode it as Type "},{"code":"T","type":"codeVoice"},{"type":"text","text":". All Types "},{"code":"T","type":"codeVoice"},{"type":"text","text":" are "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", so"},{"type":"text","text":" "},{"type":"text","text":"the only real responsibility of a "},{"code":"load","type":"codeVoice"},{"type":"text","text":" function is to locate and load the given"},{"type":"text","text":" "},{"code":"URL","type":"codeVoice"},{"type":"text","text":" and pass its "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" or "},{"code":"String","type":"codeVoice"},{"type":"text","text":" (depending on the decoder) to an appropriate"},{"type":"text","text":" "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" for the given file type."}],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit/ExternalLoader/Message":{"role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ExternalLoader\/Message","title":"Message","abstract":[{"type":"text","text":"This can be anything that an implementor of this protocol wants to pass back from"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"load()","type":"codeVoice"},{"type":"text","text":" function and have available after all external loading has been done."}],"kind":"symbol","required":true,"url":"\/documentation\/openapikit\/externalloader\/message","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}]},"doc://OpenAPIKit/documentation/OpenAPIKit":{"type":"topic","role":"collection","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","title":"OpenAPIKit","abstract":[],"url":"\/documentation\/openapikit","kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/ExternalLoader":{"role":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ExternalLoader","title":"ExternalLoader","abstract":[{"text":"An ","type":"text"},{"code":"ExternalLoader","type":"codeVoice"},{"text":" enables ","type":"text"},{"code":"OpenAPIKit","type":"codeVoice"},{"text":" to load external references","type":"text"},{"text":" ","type":"text"},{"text":"without knowing the details of what decoder is being used or how new internal","type":"text"},{"text":" ","type":"text"},{"text":"references should be named.","type":"text"}],"navigatorTitle":[{"text":"ExternalLoader","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/openapikit\/externalloader","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExternalLoader","kind":"identifier"}]},"doc://OpenAPIKit/documentation/OpenAPIKit/ExternalLoader/load(_:)":{"url":"\/documentation\/openapikit\/externalloader\/load(_:)","title":"load(_:)","required":true,"type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ExternalLoader\/load(_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Load the given URL and decode it as Type ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":". All Types "},{"code":"T","type":"codeVoice"},{"type":"text","text":" are "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", so"},{"type":"text","text":" "},{"type":"text","text":"the only real responsibility of a "},{"code":"load","type":"codeVoice"},{"type":"text","text":" function is to locate and load the given"},{"type":"text","text":" "},{"code":"URL","type":"codeVoice"},{"type":"text","text":" and pass its "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" or "},{"code":"String","type":"codeVoice"},{"type":"text","text":" (depending on the decoder) to an appropriate"},{"type":"text","text":" "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" for the given file type."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10OpenAPIKit14ExternalLoaderP7MessageQa","text":"Message"},{"kind":"text","text":"])"}]}}}