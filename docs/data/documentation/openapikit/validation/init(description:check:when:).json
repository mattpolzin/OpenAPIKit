{"kind":"symbol","metadata":{"externalID":"s:10OpenAPIKit10ValidationV11description5check4whenACyxGSS_SbAA0C7ContextVyxGcSbAJctcfc","title":"init(description:check:when:)","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"check"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"modules":[{"name":"OpenAPIKit"}],"roleHeading":"Initializer","role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validation"]]},"variants":[{"paths":["\/documentation\/openapikit\/validation\/init(description:check:when:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"description","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"check","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"validate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ValidationContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = { _ in true })","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"description","content":[{"type":"paragraph","inlineContent":[{"text":"A description of the correct state described by the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"validate"},{"text":" function. Upon failure, the error will read “Failed to satisfy: ","type":"text"},{"text":"”.","type":"text"}]}]},{"name":"validate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A function taking validation contexts containing"},{"type":"text","text":" "},{"type":"text","text":"subjects of type "},{"code":"Subject","type":"codeVoice"},{"type":"text","text":" and validating them. This function returns"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if validation succeeds and "},{"code":"false","type":"codeVoice"},{"type":"text","text":" if it fails."}]}]},{"name":"predicate","content":[{"inlineContent":[{"type":"text","text":"A function returning "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if this validator"},{"type":"text","text":" "},{"type":"text","text":"should run against the given value."}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This version of the initializer assumes only one error can occur for this","type":"text"},{"text":" ","type":"text"},{"text":"validation and in exchange you can frontload the description of the validation","type":"text"},{"text":" ","type":"text"},{"text":"and simplify the body of the ","type":"text"},{"code":"validate","type":"codeVoice"},{"text":" method to just return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" ","type":"text"},{"text":"if the value is invalid.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validation\/init(description:check:when:)"},"sections":[],"abstract":[{"text":"Create a Validation with a single error that applies to values of type ","type":"text"},{"code":"Subject","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://OpenAPIKit/documentation/OpenAPIKit":{"type":"topic","title":"OpenAPIKit","kind":"symbol","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit","url":"\/documentation\/openapikit","role":"collection","abstract":[]},"doc://OpenAPIKit/documentation/OpenAPIKit/ValidationContext":{"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/ValidationContext","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationContext"}],"role":"symbol","title":"ValidationContext","url":"\/documentation\/openapikit\/validationcontext","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationContext"}],"abstract":[{"type":"text","text":"The context in which a validation can be applied."}]},"doc://OpenAPIKit/documentation/OpenAPIKit/Validation/init(description:check:when:)":{"title":"init(description:check:when:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"description","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"check","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ValidationContext","preciseIdentifier":"s:10OpenAPIKit17ValidationContextV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/openapikit\/validation\/init(description:check:when:)","type":"topic","identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validation\/init(description:check:when:)","abstract":[{"text":"Create a Validation with a single error that applies to values of type ","type":"text"},{"code":"Subject","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://OpenAPIKit/documentation/OpenAPIKit/Validation":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validation","kind":"identifier"}],"type":"topic","url":"\/documentation\/openapikit\/validation","navigatorTitle":[{"kind":"identifier","text":"Validation"}],"identifier":"doc:\/\/OpenAPIKit\/documentation\/OpenAPIKit\/Validation","title":"Validation","abstract":[{"type":"text","text":"Holds a function to determine if a validation"},{"text":" ","type":"text"},{"type":"text","text":"applies ("},{"type":"codeVoice","code":"predicate"},{"text":") and a function that applies","type":"text"},{"type":"text","text":" "},{"text":"a validation (","type":"text"},{"code":"validate","type":"codeVoice"},{"type":"text","text":")."}],"kind":"symbol"}}}